
# completions for arangobench
complete --command arangobench -l 'async' -d 'send asynchronous requests'
complete --command arangobench -l 'batch-size' -d 'number of operations in one batch (0 disables batching)'
complete --command arangobench -l 'check-configuration' -d 'check the configuration and exists'
complete --command arangobench -l 'collection' -d 'collection name to use in tests'
complete --command arangobench -l 'complexity' -d 'complexity parameter for the test'
complete --command arangobench -l 'concurrency' -d 'number of parallel connections'
complete --command arangobench -l 'configuration' -d 'the configuration file or none'
complete --command arangobench -l 'delay' -d 'use a startup delay (necessary only when run in series)'
complete --command arangobench -l 'keep-alive' -d 'use HTTP keep-alive'
complete --command arangobench -l 'progress' -d 'show progress'
complete --command arangobench -l 'quiet' -d 'supress status messages'
complete --command arangobench -l 'requests' -d 'total number of operations'
complete --command arangobench -l 'test-case' -d 'test case to use (possible values: aqlv8, version, document, collection, skiplist, multitrx, hash, edge, crud, crud-write-read, shapes, shapes-append, random-shapes, crud-append, counttrx, multi-collection, aqltrx, import-document, aqlinsert)'
complete --command arangobench -l 'verbose' -d 'print out replies if the http-header indicates db-errors'
complete --command arangobench -l 'version' -d 'reports the version and exits'
complete --command arangobench -l 'log.level' -d '<string...> the global or topic-specific log level'
complete --command arangobench -l 'log.output' -d '<string...> log destination(s)'
complete --command arangobench -l 'log.use-local-time' -d 'use local timezone instead of UTC'
complete --command arangobench -l 'server.authentication' -d 'require authentication when connecting'
complete --command arangobench -l 'server.connection-timeout' -d 'connection timeout in seconds'
complete --command arangobench -l 'server.database' -d 'database name to use when connecting'
complete --command arangobench -l 'server.endpoint' -d 'endpoint to connect to, use none to start without a server'
complete --command arangobench -l 'server.max-packet-size' -d 'maximum packet size (in bytes) for client/server communication'
complete --command arangobench -l 'server.password' -d 'password to use when connecting. If not specified and authentication is required, the user will be prompted for a password'
complete --command arangobench -l 'server.request-timeout' -d 'request timeout in seconds'
complete --command arangobench -l 'server.username' -d 'username to use when connecting'
complete --command arangobench -l 'ssl.protocol' -d 'ssl protocol (1 = SSLv2, 2 = SSLv23, 3 = SSLv3, 4 = TLSv1, 5 = TLSV1.2 (recommended)'
complete --command arangobench -l 'temp.path' -d 'path for temporary files'

# completions for arangosh
complete --command arangosh -l 'check-configuration' -d 'check the configuration and exists'
complete --command arangosh -l 'configuration' -d 'the configuration file or none'
complete --command arangosh -l 'jslint' -d '<string...> do not start as shell, run jslint instead'
complete --command arangosh -l 'quiet' -d 'silent startup'
complete --command arangosh -l 'version' -d 'reports the version and exits'
complete --command arangosh -l 'console.audit-file' -d 'audit log file to save commands and results'
complete --command arangosh -l 'console.auto-complete' -d 'enable auto completion'
complete --command arangosh -l 'console.colors' -d 'enable color support'
complete --command arangosh -l 'console.pager' -d 'enable paging'
complete --command arangosh -l 'console.pretty-print' -d 'enable pretty printing'
complete --command arangosh -l 'console.prompt' -d 'prompt used in REPL'
complete --command arangosh -l 'javascript.check-syntax' -d '<string...> syntax check code Javascript code from file'
complete --command arangosh -l 'javascript.current-module-directory' -d 'add current directory to module path'
complete --command arangosh -l 'javascript.execute' -d '<string...> execute Javascript code from file'
complete --command arangosh -l 'javascript.execute-string' -d '<string...> execute Javascript code from string'
complete --command arangosh -l 'javascript.gc-interval' -d 'request-based garbage collection interval (each n.th commands)'
complete --command arangosh -l 'javascript.unit-tests' -d '<string...> do not start as shell, run unit tests instead'
complete --command arangosh -l 'log.level' -d '<string...> the global or topic-specific log level'
complete --command arangosh -l 'log.output' -d '<string...> log destination(s)'
complete --command arangosh -l 'log.use-local-time' -d 'use local timezone instead of UTC'
complete --command arangosh -l 'server.authentication' -d 'require authentication when connecting'
complete --command arangosh -l 'server.connection-timeout' -d 'connection timeout in seconds'
complete --command arangosh -l 'server.database' -d 'database name to use when connecting'
complete --command arangosh -l 'server.endpoint' -d 'endpoint to connect to, use none to start without a server'
complete --command arangosh -l 'server.max-packet-size' -d 'maximum packet size (in bytes) for client/server communication'
complete --command arangosh -l 'server.password' -d 'password to use when connecting. If not specified and authentication is required, the user will be prompted for a password'
complete --command arangosh -l 'server.request-timeout' -d 'request timeout in seconds'
complete --command arangosh -l 'server.username' -d 'username to use when connecting'
complete --command arangosh -l 'ssl.protocol' -d 'ssl protocol (1 = SSLv2, 2 = SSLv23, 3 = SSLv3, 4 = TLSv1, 5 = TLSV1.2 (recommended)'
complete --command arangosh -l 'temp.path' -d 'path for temporary files'

# completions for arangoimp
complete --command arangoimp -l 'backslash-escape' -d 'use backslash as the escape character for quotes, used for csv'
complete --command arangoimp -l 'batch-size' -d 'size for individual data batches (in bytes)'
complete --command arangoimp -l 'check-configuration' -d 'check the configuration and exists'
complete --command arangoimp -l 'collection' -d 'collection name'
complete --command arangoimp -l 'configuration' -d 'the configuration file or none'
complete --command arangoimp -l 'create-collection' -d 'create collection if it does not yet exist'
complete --command arangoimp -l 'create-collection-type' -d 'type of collection if collection is created (edge or document)'
complete --command arangoimp -l 'file' -d 'file name ("-" for STDIN)'
complete --command arangoimp -l 'from-collection-prefix' -d '_from collection name prefix (will be prepended to all values in _from)'
complete --command arangoimp -l 'on-duplicate' -d 'action to perform when a unique key constraint violation occurs. Possible values: ignore, replace, update, error'
complete --command arangoimp -l 'overwrite' -d 'overwrite collection if it exist (WARNING: this will remove any data from the collection)'
complete --command arangoimp -l 'progress' -d 'show progress'
complete --command arangoimp -l 'quote' -d 'quote character(s), used for csv'
complete --command arangoimp -l 'separator' -d 'field separator, used for csv and tsv'
complete --command arangoimp -l 'to-collection-prefix' -d '_to collection name prefix (will be prepended to all values in _to)'
complete --command arangoimp -l 'type' -d 'type of file (json, csv, tsv)'
complete --command arangoimp -l 'version' -d 'reports the version and exits'
complete --command arangoimp -l 'log.level' -d '<string...> the global or topic-specific log level'
complete --command arangoimp -l 'log.output' -d '<string...> log destination(s)'
complete --command arangoimp -l 'log.use-local-time' -d 'use local timezone instead of UTC'
complete --command arangoimp -l 'server.authentication' -d 'require authentication when connecting'
complete --command arangoimp -l 'server.connection-timeout' -d 'connection timeout in seconds'
complete --command arangoimp -l 'server.database' -d 'database name to use when connecting'
complete --command arangoimp -l 'server.endpoint' -d 'endpoint to connect to, use none to start without a server'
complete --command arangoimp -l 'server.max-packet-size' -d 'maximum packet size (in bytes) for client/server communication'
complete --command arangoimp -l 'server.password' -d 'password to use when connecting. If not specified and authentication is required, the user will be prompted for a password'
complete --command arangoimp -l 'server.request-timeout' -d 'request timeout in seconds'
complete --command arangoimp -l 'server.username' -d 'username to use when connecting'
complete --command arangoimp -l 'ssl.protocol' -d 'ssl protocol (1 = SSLv2, 2 = SSLv23, 3 = SSLv3, 4 = TLSv1, 5 = TLSV1.2 (recommended)'
complete --command arangoimp -l 'temp.path' -d 'path for temporary files'

# completions for arangodump
complete --command arangodump -l 'batch-size' -d 'initial size for individual data batches (in bytes)'
complete --command arangodump -l 'check-configuration' -d 'check the configuration and exists'
complete --command arangodump -l 'collection' -d '<string...> restrict to collection name (can be specified multiple times)'
complete --command arangodump -l 'compat28' -d 'produce a dump compatible with ArangoDB 2.8'
complete --command arangodump -l 'configuration' -d 'the configuration file or none'
complete --command arangodump -l 'dump-data' -d 'dump collection data'
complete --command arangodump -l 'force' -d 'continue dumping even in the face of some server-side errors'
complete --command arangodump -l 'include-system-collections' -d 'include system collections'
complete --command arangodump -l 'initial-batch-size' -d 'initial size for individual data batches (in bytes)'
complete --command arangodump -l 'output-directory' -d 'output directory'
complete --command arangodump -l 'overwrite' -d 'overwrite data in output directory'
complete --command arangodump -l 'progress' -d 'show progress'
complete --command arangodump -l 'tick-end' -d 'last tick to be included in data dump'
complete --command arangodump -l 'tick-start' -d 'only include data after this tick'
complete --command arangodump -l 'version' -d 'reports the version and exits'
complete --command arangodump -l 'log.level' -d '<string...> the global or topic-specific log level'
complete --command arangodump -l 'log.output' -d '<string...> log destination(s)'
complete --command arangodump -l 'log.use-local-time' -d 'use local timezone instead of UTC'
complete --command arangodump -l 'server.authentication' -d 'require authentication when connecting'
complete --command arangodump -l 'server.connection-timeout' -d 'connection timeout in seconds'
complete --command arangodump -l 'server.database' -d 'database name to use when connecting'
complete --command arangodump -l 'server.endpoint' -d 'endpoint to connect to, use none to start without a server'
complete --command arangodump -l 'server.max-packet-size' -d 'maximum packet size (in bytes) for client/server communication'
complete --command arangodump -l 'server.password' -d 'password to use when connecting. If not specified and authentication is required, the user will be prompted for a password'
complete --command arangodump -l 'server.request-timeout' -d 'request timeout in seconds'
complete --command arangodump -l 'server.username' -d 'username to use when connecting'
complete --command arangodump -l 'ssl.protocol' -d 'ssl protocol (1 = SSLv2, 2 = SSLv23, 3 = SSLv3, 4 = TLSv1, 5 = TLSV1.2 (recommended)'

# completions for arangorestore
complete --command arangorestore -l 'batch-size' -d 'maximum size for individual data batches (in bytes)'
complete --command arangorestore -l 'check-configuration' -d 'check the configuration and exists'
complete --command arangorestore -l 'collection' -d '<string...> restrict to collection name (can be specified multiple times)'
complete --command arangorestore -l 'configuration' -d 'the configuration file or none'
complete --command arangorestore -l 'create-collection' -d 'create collection structure'
complete --command arangorestore -l 'create-database' -d 'create the target database if it does not exist'
complete --command arangorestore -l 'default-number-of-shards' -d 'default value for numberOfShards if not specified'
complete --command arangorestore -l 'force' -d 'continue restore even in the face of some server-side errors'
complete --command arangorestore -l 'import-data' -d 'import data into collection'
complete --command arangorestore -l 'include-system-collections' -d 'include system collections'
complete --command arangorestore -l 'input-directory' -d 'input directory'
complete --command arangorestore -l 'overwrite' -d 'overwrite collections if they exist'
complete --command arangorestore -l 'progress' -d 'show progress'
complete --command arangorestore -l 'recycle-ids' -d 'recycle collection and revision ids from dump'
complete --command arangorestore -l 'version' -d 'reports the version and exits'
complete --command arangorestore -l 'log.level' -d '<string...> the global or topic-specific log level'
complete --command arangorestore -l 'log.output' -d '<string...> log destination(s)'
complete --command arangorestore -l 'log.use-local-time' -d 'use local timezone instead of UTC'
complete --command arangorestore -l 'server.authentication' -d 'require authentication when connecting'
complete --command arangorestore -l 'server.connection-timeout' -d 'connection timeout in seconds'
complete --command arangorestore -l 'server.database' -d 'database name to use when connecting'
complete --command arangorestore -l 'server.endpoint' -d 'endpoint to connect to, use none to start without a server'
complete --command arangorestore -l 'server.max-packet-size' -d 'maximum packet size (in bytes) for client/server communication'
complete --command arangorestore -l 'server.password' -d 'password to use when connecting. If not specified and authentication is required, the user will be prompted for a password'
complete --command arangorestore -l 'server.request-timeout' -d 'request timeout in seconds'
complete --command arangorestore -l 'server.username' -d 'username to use when connecting'
complete --command arangorestore -l 'ssl.protocol' -d 'ssl protocol (1 = SSLv2, 2 = SSLv23, 3 = SSLv3, 4 = TLSv1, 5 = TLSV1.2 (recommended)'
complete --command arangorestore -l 'temp.path' -d 'path for temporary files'

# completions for arangod
complete --command arangod -l 'check-configuration' -d 'check the configuration and exists'
complete --command arangod -l 'configuration' -d 'the configuration file or none'
complete --command arangod -l 'console' -d 'start a JavaScript emergency console'
complete --command arangod -l 'version' -d 'reports the version and exits'
complete --command arangod -l 'agency.compaction-step-size' -d 'step size between state machine compactions'
complete --command arangod -l 'agency.election-timeout-max' -d 'maximum timeout before an agent calls for new election [s]'
complete --command arangod -l 'agency.election-timeout-min' -d 'minimum timeout before an agent calls for new election [s]'
complete --command arangod -l 'agency.endpoint' -d '<string...> agency endpoints'
complete --command arangod -l 'agency.id' -d 'this agents id'
complete --command arangod -l 'agency.notify' -d 'notify others'
complete --command arangod -l 'agency.size' -d 'number of agents'
complete --command arangod -l 'agency.supervision' -d 'perform arangodb cluster supervision'
complete --command arangod -l 'agency.supervision-frequency' -d 'arangodb cluster supervision frequency [s]'
complete --command arangod -l 'cluster.agency-endpoint' -d '<string...> agency endpoint to connect to'
complete --command arangod -l 'cluster.agency-prefix' -d 'agency prefix'
complete --command arangod -l 'cluster.arangod-path' -d 'path to the arangod for the cluster'
complete --command arangod -l 'cluster.coordinator-config' -d 'path to the coordinator configuration'
complete --command arangod -l 'cluster.data-path' -d 'path to cluster database directory'
complete --command arangod -l 'cluster.dbserver-config' -d 'path to the DBserver configuration'
complete --command arangod -l 'cluster.log-path' -d 'path to log directory for the cluster'
complete --command arangod -l 'cluster.my-address' -d 'this servers endpoint'
complete --command arangod -l 'cluster.my-id' -d 'this servers id'
complete --command arangod -l 'cluster.my-local-info' -d 'this servers local info'
complete --command arangod -l 'cluster.my-role' -d 'this servers role'
complete --command arangod -l 'cluster.password' -d 'password used for cluster-internal communication'
complete --command arangod -l 'cluster.username' -d 'username used for cluster-internal communication'
complete --command arangod -l 'database.auto-upgrade' -d 'perform a database upgrade if necessary'
complete --command arangod -l 'database.directory' -d 'path to the database directory'
complete --command arangod -l 'database.maximal-journal-size' -d 'default maximal journal size, can be overwritten when creating a collection'
complete --command arangod -l 'foxx.queues' -d 'enable or disable Foxx queues'
complete --command arangod -l 'foxx.queues-poll-interval' -d 'poll interval (in seconds) for Foxx queue manager'
complete --command arangod -l 'frontend.proxy-request-check' -d 'enable or disable proxy request checking'
complete --command arangod -l 'frontend.trusted-proxy' -d '<string...> list of proxies to trust (may be IP or network). Make sure --frontend. proxy-request-check is enabled'
complete --command arangod -l 'http.hide-product-header' -d 'do not expose "Server: ArangoDB" header in HTTP responses'
complete --command arangod -l 'http.keep-alive-timeout' -d 'keep-alive timeout in seconds'
complete --command arangod -l 'http.trusted-origin' -d '<string...> trusted origin URLs for CORS requests with credentials'
complete --command arangod -l 'javascript.app-path' -d 'directory for Foxx applications'
complete --command arangod -l 'javascript.gc-frequency' -d 'JavaScript time-based garbage collection frequency (each x seconds)'
complete --command arangod -l 'javascript.gc-interval' -d 'JavaScript request-based garbage collection interval (each x requests)'
complete --command arangod -l 'javascript.script' -d '<string...> run scripts and exit'
complete --command arangod -l 'javascript.script-parameter' -d '<string...> script parameter'
complete --command arangod -l 'javascript.startup-directory' -d 'path to the directory containing JavaScript startup scripts'
complete --command arangod -l 'javascript.v8-contexts' -d 'number of V8 contexts that are created for executing JavaScript actions'
complete --command arangod -l 'log.level' -d '<string...> the global or topic-specific log level'
complete --command arangod -l 'log.output' -d '<string...> log destination(s)'
complete --command arangod -l 'log.use-local-time' -d 'use local timezone instead of UTC'
complete --command arangod -l 'nonce.size' -d 'the size of the hash array for nonces'
complete --command arangod -l 'query.cache-entries' -d 'maximum number of results in query result cache per database'
complete --command arangod -l 'query.cache-mode' -d 'mode for the AQL query result cache (on, off, demand)'
complete --command arangod -l 'query.slow-threshold' -d 'threshold for slow AQL queries (in seconds)'
complete --command arangod -l 'query.tracking' -d 'whether to track slow AQL queries'
complete --command arangod -l 'rocksdb.base-background-compactions' -d 'suggested number of concurrent background compaction jobs'
complete --command arangod -l 'rocksdb.compaction-read-ahead-size' -d 'if non-zero, we perform bigger reads when doing compaction. If youre running RocksDB on spinning disks, you should set this to at least 2MB. that way RocksDBs compaction is doing sequential instead of random reads.'
complete --command arangod -l 'rocksdb.enabled' -d 'Whether or not the RocksDB engine is enabled'
complete --command arangod -l 'rocksdb.keep-log-file-num' -d 'maximal info log files to be kept'
complete --command arangod -l 'rocksdb.log-file-time-to-roll' -d 'time for the info log file to roll (in seconds). If specified with non-zero value, log file will be rolled if it has been active longer than `log_file_time_to_roll`'
complete --command arangod -l 'rocksdb.max-background-compactions' -d 'maximum number of concurrent background compaction jobs'
complete --command arangod -l 'rocksdb.max-bytes-for-level-multiplier' -d 'control maximum total data size for a level'
complete --command arangod -l 'rocksdb.max-log-file-size' -d 'specify the maximal size of the info log file'
complete --command arangod -l 'rocksdb.max-write-buffer-number' -d 'maximum number of write buffers that built up in memory'
complete --command arangod -l 'rocksdb.min-write-buffer-number-to-merge' -d 'minimum number of write buffers that will be merged together before writing to storage'
complete --command arangod -l 'rocksdb.num-levels' -d 'number of levels for the database'
complete --command arangod -l 'rocksdb.optimize-filters-for-hits' -d 'this flag specifies that the implementation should optimize the filters mainly for cases where keys are found rather than also optimize for keys missed. This would be used in cases where the application knows that there are very few misses or the performance in the case of misses is not important'
complete --command arangod -l 'rocksdb.verify-checksums-in-compation' -d 'if true, compaction will verify checksum on every read that happens as part of compaction'
complete --command arangod -l 'rocksdb.write-buffer-size' -d 'amount of data to build up in memory before converting to a sorted on-disk file (0 = disabled)'
complete --command arangod -l 'scheduler.threads' -d 'number of threads for I/O scheduler'
complete --command arangod -l 'server.authentication' -d 'enable or disable authentication for ALL client requests'
complete --command arangod -l 'server.authentication-system-only' -d 'use HTTP authentication only for requests to /_api and /_admin'
complete --command arangod -l 'server.authentication-unix-sockets' -d 'authentication for requests via UNIX domain sockets'
complete --command arangod -l 'server.descriptors-minimum' -d 'minimum number of file descriptors needed to start'
complete --command arangod -l 'server.endpoint' -d '<string...> endpoint for client requests (e.g. http+tcp://127.0.0.1:8529, or vpp+ssl://192.168.1. 1:8529)'
complete --command arangod -l 'server.jwt-secret' -d 'secret to use when doing jwt authentication'
complete --command arangod -l 'server.session-timeout' -d 'timeout of web interface server sessions (in seconds)'
complete --command arangod -l 'server.threads' -d 'number of threads for basic operations (0 = automatic)'
complete --command arangod -l 'ssl.cafile' -d 'ca file used for secure connections'
complete --command arangod -l 'ssl.cipher-list' -d 'ssl cipers to use, see OpenSSL documentation'
complete --command arangod -l 'ssl.ecdh-curve' -d 'SSL ECDH Curve, see the output of "openssl ecparam -list_curves"'
complete --command arangod -l 'ssl.keyfile' -d 'key-file used for secure connections'
complete --command arangod -l 'ssl.protocol' -d 'ssl protocol (1 = SSLv2, 2 = SSLv23, 3 = SSLv3, 4 = TLSv1, 5 = TLSV1.2 (recommended)'
complete --command arangod -l 'ssl.session-cache' -d 'enable the session cache for connections'
complete --command arangod -l 'temp.path' -d 'path for temporary files'
complete --command arangod -l 'wal.directory' -d 'logfile directory'
complete --command arangod -l 'wal.logfile-size' -d 'size of each logfile (in bytes)'
complete --command arangod -l 'wal.open-logfiles' -d 'maximum number of parallel open logfiles'
complete --command arangod -l 'wal.reserve-logfiles' -d 'maximum number of reserve logfiles to maintain'
complete --command arangod -l 'wal.sync-interval' -d 'interval for automatic, non-requested disk syncs (in milliseconds)'

